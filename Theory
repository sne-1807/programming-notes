1. java.lang.Math Library:

    Math.round(num)   ---->  rounds decimal UP OR DOWN to nearest integer
    Math.floor(num)   ---->  rounds decimal DOWN to nearest integer
    Math.ceil(num)    ---->  rounds decimal UP to nearest integer
    Math.PI           ---->  provides pi value
    Math.max(x,y)     ---->  gives larger of two values
    Math.min(x,y)     ---->  gives smaller of two values
    Math.sqrt(num)    ---->  gives square root of num
    Math.abs(num)     ---->  returns absolute (+ve) value of num
    Math.pow(x,y)     ---->  returns x^y value
    Math.random()     ---->  returns random number b/w 1-10

2. Conversions: 

    String  to a) Integer: Integer.valueOf(String) (OR)  Integer.parseInt(String)
               b) Double : Double.valueOf(String)  (OR)  Double.parseDouble(String)

    Integer to a) String: Integer.toString(int)   (OR)  String.valueOf(int)
    
    Char    to a) Integer: (int) character;  converts to ASCII number of that character
                            => To convert from ASCII into Integer number: subtract by 48
                                i.e. ((int) character)-48
                                
                           (OR) Character.getNumericValue(char)
               
               b) String: Character.toString(char) (OR) String.valueOf(char)
               
               
3. Decimal Formatting:
    
    String Formatting:
        String str = String.format("%.2f", double) => format upto 2 decimal places
        
4. ARRAY METHODS:
    

5. STRING METHODS:
    str.charAt(index)           ---->   returns character at specified index
    str.length()                ---->   returns length of string
    str.concat(s1)              ---->   returns new string that concatenates this string with s1
    str.toUpperCase()           ---->   returns new string with all letter in uppercase
    str.toLowerCase()           ---->   returns new string with all letters in lowercase
    str.trim()                  ---->   returns string with leading and trailing whitespaces trimmed
    str.equals(s1)              ---->   returns True if str equals s1 (case sensitive)
    str.equalsIgnoreCase(s1)    ---->   returns True if str equals s1 (case INsensitive)
    str.startsWith(prefix)      ---->   returns True if str starts with specified prefix
    str.endsWith(suffix)        ---->   returns True if str ends with specified suffix
    str.contains(s1)            ---->   returns True if str contains s1 substring
    str.substring(begin,end)    ---->   extracts substring from string (beginIndex included, endIndex excluded)
    str.toCharArray()           ---->   converts all characters of string into character array
    str.indexOf(ch, fromIndex)  ---->   returns index of first occurence of character in string from the fromIndex onwards (default=0)
    str.indexOf(s1, fromIndex)  ---->   returns index of first occurence of s1(substring) in string from the fromIndex onwards (default=0)
    str.lastIndexOf             ---->   same as previous two cases, except returns last occurence of string
    
    str.split(regex, limit)     ---->   returns array of substring split by regex given ("-"," ","@"); limit controls number of output substrings returned
    


